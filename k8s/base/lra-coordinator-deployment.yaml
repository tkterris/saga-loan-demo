apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lra-coordinator
    app.kubernetes.io/component: lra-coordinator
    app.kubernetes.io/instance: lra-coordinator
    app.kubernetes.io/name: lra-coordinator
    app.kubernetes.io/part-of: lra-coordinator-app
  name: lra-coordinator
  namespace: saga-loan-demo
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: lra-coordinator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lra-coordinator
        deployment: lra-coordinator
    spec:
      containers:
      - image: lra-coordinator #The image registry location is overwritten in kustomization.yaml. See README for more info.
        imagePullPolicy: Always
        name: lra-coordinator
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: 
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        volumeMounts:
        - mountPath: "/deployments/ObjectStore"
          name: lra-coordinator-data
        readinessProbe:
          httpGet:
            path: /lra-coordinator
            port: 8080
            scheme: HTTP
          failureThreshold: 30
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /lra-coordinator
            port: 8080
            scheme: HTTP
          failureThreshold: 30
          periodSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: lra-coordinator-data
        # We use a shared store for HA, but this could be any other shared store, e.g. JDBCStore
        # https://www.narayana.io/docs/project/index.html
        persistentVolumeClaim:
          claimName: lra-coordinator-data
      imagePullSecrets:
        - name: quayio
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30




